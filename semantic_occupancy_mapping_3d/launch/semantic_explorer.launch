<?xml version="1.0"?>
<launch>
    <arg name="subscript" default="" />
    <arg name="enable_logging" default="false" />
    <!-- Whether to use perfect gazebo position of PX4 LPE/EKF2 Position  -->
    <arg name="use_gazebo_ground_truth" value="true"/>
    <arg name="mapping_param_file" default="$(find semantic_occupancy_mapping_3d)/config/semantic_exploration.yaml" />

    <!-- Initial position of drone in Gazebo wrold coordinates-->
    <arg name="x" default="0"/>
    <arg name="y" default="1.0"/>
    <arg name="z" default="0.25"/>
    <arg name="R" default="0"/>
    <arg name="P" default="0"/>
    <arg name="Y" default="1.57079632679"/>


    <!-- Mapping node -->
    <node pkg="semantic_occupancy_mapping_3d" name="semantic_mapping_node" type="semantic_mapping_node" output="screen"/>


    <!-- Ros transformation between Gazebo world frame and PX4 local_origin frame (when Gazebo ground truth position is used)-->
    <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
    args="$(arg x) $(arg y) $(arg z) 0 0 0 world local_origin 100" if="$(arg use_gazebo_ground_truth)"/>
    
    <!-- Ros transformation between Gazebo world frame and PX4 local_origin frame (when PX4 local position is used)-->
    <node pkg="tf" type="static_transform_publisher" name="tf_local_origin"
    args="0 0 $(arg z) 0 0 0 world local_origin 100" unless="$(arg use_gazebo_ground_truth)"/>

    <!-- Ros transformation between Gazebo-based Odom frame and camera_link frame (when Gazebo ground truth position is used)-->
    <node pkg="tf" type="static_transform_publisher" name="tf_camera"
    args="0.1 0 0.1 -1.57 0 -1.57 odom camera_link 100" if="$(arg use_gazebo_ground_truth)"/>

    <!-- Ros transformation between PX4 FCU frame and camera_link frame (when PX4 local position is used)-->
    <node pkg="tf" type="static_transform_publisher" name="tf_camera"
    args="0.1 0 0.1 -1.57 0 -1.57 fcu camera_link 100" unless="$(arg use_gazebo_ground_truth)"/>

    <!-- Semantic pointcloud topic -->
    <arg name="pcl_topic" default="/semantic_pcl/semantic_pcl"/>
    <arg name="stl_file_path" default="" />

    <!-- Sem Mapper  -->
    <rosparam command="load" file="$(arg mapping_param_file)" />
    <node pkg="semantic_occupancy_mapping_3d" name="sem_mapper" type="sem_mapper" output="screen">
        <param name="stl_file_path" type="string" value="$(arg stl_file_path)" />
        <remap from="pointcloud_throttled" to="$(arg pcl_topic)"/>
        <remap from="poseStamped" to="/current_pose"/>
        <remap from="semantic_exploration" to="/semantic_exploration"/>
    </node>


</launch>
